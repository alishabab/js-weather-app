!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){var o=n(1),r=n(2);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var i={insert:"head",singleton:!1};o(r,i);e.exports=r.locals||{}},function(e,t,n){"use strict";var o,r=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function c(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},o=[],r=0;r<e.length;r++){var i=e[r],l=t.base?i[0]+t.base:i[0],s=n[l]||0,u="".concat(l," ").concat(s);n[l]=s+1;var d=c(u),f={css:i[1],media:i[2],sourceMap:i[3]};-1!==d?(a[d].references++,a[d].updater(f)):a.push({identifier:u,updater:h(f,t),references:1}),o.push(u)}return o}function s(e){var t=document.createElement("style"),o=e.attributes||{};if(void 0===o.nonce){var r=n.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach((function(e){t.setAttribute(e,o[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,n,o){var r=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(e.styleSheet)e.styleSheet.cssText=d(t,r);else{var i=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function p(e,t,n){var o=n.css,r=n.media,i=n.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),i&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}var m=null,v=0;function h(e,t){var n,o,r;if(t.singleton){var i=v++;n=m||(m=s(t)),o=f.bind(null,n,i,!1),r=f.bind(null,n,i,!0)}else n=s(t),o=p.bind(null,n,t),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else r()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=r());var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var o=0;o<n.length;o++){var r=c(n[o]);a[r].references--}for(var i=l(e,t),s=0;s<n.length;s++){var u=c(n[s]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}n=i}}}},function(e,t,n){(t=n(3)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Sriracha&display=swap);"]),t.push([e.i,'*{margin:0;padding:0;box-sizing:border-box;list-style:none}body{font-family:"Sriracha",cursive;background-image:url("https://img.itch.zone/aW1nLzk4Nzg5Ni5naWY=/original/V5VZ3o.gif");background-repeat:no-repeat;background-size:100vw 100vh}.logo{display:inline-block;padding-bottom:30px;text-decoration:none;font-size:48px;color:#49740a}.input{width:300px}.input,.btn{outline:none;padding:.3rem;border-radius:5px;font-family:"Sriracha",cursive;margin:10px}.input:focus{background-color:skyblue}.btn:hover{cursor:pointer;background-color:skyblue}.content{margin:1.5rem auto;width:90vw;background-color:rgba(43,41,41,.3);display:flex;flex-direction:column;align-items:center}.content-container{text-align:center}.icon{display:flex;align-items:center}.animate{animation:myframe 2s ease-in-out 0s 1}.footer{width:100%;display:flex;justify-content:space-around;align-items:center;position:fixed;bottom:10px;right:10px}.footer-link{text-decoration:none;color:#adff2f}.footer-link:hover{color:#ff4500}.autocomplete{width:300px;position:relative;display:inline-block}.autocomplete-items{position:absolute;border:1px solid #d4d4d4;border-bottom:none;border-top:none;z-index:99;top:100%;left:0;right:0}.autocomplete-items div{padding:10px;cursor:pointer;background-color:#fff;border-bottom:1px solid #d4d4d4}.autocomplete-items div:hover{background-color:#e9e9e9}.autocomplete-active{background-color:#1e90ff !important;color:#fff}@keyframes myframe{0%{width:20vw}100%{width:90vw}}@media(min-width: 720px){.content{flex-direction:row;justify-content:space-around;align-items:center}}',""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var r=(a=o,c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(l," */")),i=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([r]).join("\n")}var a,c,l;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(r[a]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&r[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},function(e,t,n){"use strict";n.r(t);n(0);var o={celsiusToF:e=>(1.8*Number(e)+32).toFixed(2)};const r=document.querySelector("#weatherDiv"),i=document.querySelector("#city");let a;const c=e=>{e.innerHTML=""},l=e=>{r.textContent=e},s=e=>{const t=document.querySelectorAll(".autocomplete-items");for(let n=0;n<t.length;n+=1)e!==t[n]&&e!==i&&t[n].parentNode.removeChild(t[n])},u=e=>!!e&&((e=>{for(let t=0;t<e.length;t+=1)e[t].classList.remove("autocomplete-active")})(e),a>=e.length&&(a=0),a<0&&(a=e.length-1),e[a].classList.add("autocomplete-active"),!0),d=(e,t,n)=>{c(e);["Current Temp","Feels Like","Min Temp","Max Temp"].forEach((r,i)=>{const a=document.createElement("li"),c="To Celsius"===t.textContent?n[i]:o.celsiusToF(n[i]);a.textContent=`${r} : ${c}`,e.appendChild(a)}),t.textContent="To Celsius"===t.textContent?"To Farenhite":"To Celsius"},f="https://api.weatherapi.com/v1",p="df7a07067351434c82a123240200708",m=document.querySelector("#getBtn"),v=document.querySelector("#city"),h=async e=>{const t=await fetch(e);if(t.ok)return t.json();throw new Error("City Not Found!")};v.addEventListener("input",async()=>{const e=v.value;if(!(e.length<1))try{(e=>{if(e.length<1)return void s();s(),a=-1;const t=e,n=document.createElement("DIV");n.setAttribute("id",i.id+"autocomplete-list"),n.setAttribute("class","autocomplete-items"),i.parentNode.appendChild(n);for(let e=0;e<5;e+=1){const o=document.createElement("DIV");o.innerHTML=t[e].name,o.innerHTML+=`<input type='hidden' value='${t[e].name}'>`,o.addEventListener("click",()=>{i.value=o.getElementsByTagName("input")[0].value,s()}),n.appendChild(o)}i.addEventListener("keydown",e=>{let t=document.getElementById(i.id+"autocomplete-list");t&&(t=t.getElementsByTagName("div")),40===e.keyCode?(a+=1,u(t)):38===e.keyCode?(a-=1,u(t)):13===e.keyCode&&(e.preventDefault(),a>-1&&t&&t[a].click())}),document.addEventListener("click",e=>{s(e.target)})})(await h(`${f}/search.json?key=${p}&q=${e}`))}catch(e){l(e)}}),m.addEventListener("click",async e=>{e.preventDefault();const t=v.value;try{(e=>{document.querySelector(".form").reset(),c(r),r.classList.add("animate");const t=document.createElement("div"),n=document.createElement("h1"),o=document.createElement("h2"),i=document.createElement("img"),a=document.createElement("ul"),l=document.createElement("button");l.setAttribute("class","btn"),l.textContent="To Celsius";const s=[e.current.temp_c,e.current.feelslike_c,e.forecast.forecastday[0].day.mintemp_c,e.forecast.forecastday[0].day.maxtemp_c];d(a,l,s),l.addEventListener("click",()=>d(a,l,s)),t.setAttribute("class","icon"),i.src="https://"+e.current.condition.icon,n.textContent=`${e.location.name}, ${e.location.region}`,o.textContent=e.current.condition.text,t.appendChild(n),t.appendChild(i),r.appendChild(t),r.appendChild(o),r.appendChild(a),r.appendChild(l),r.addEventListener("animationend",()=>{r.classList.remove("animate")})})(await h(`${f}/forecast.json?key=${p}&q=${t}&days=1`))}catch(e){(e=>{l(e)})(e)}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,